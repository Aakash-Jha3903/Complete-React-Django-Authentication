[
    {
        "label": "django.contrib.auth.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "django_ckeditor_5.fields",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django_ckeditor_5.fields",
        "description": "django_ckeditor_5.fields",
        "detail": "django_ckeditor_5.fields",
        "documentation": {}
    },
    {
        "label": "shortuuid.django_fields",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "shortuuid.django_fields",
        "description": "shortuuid.django_fields",
        "detail": "shortuuid.django_fields",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "api.models",
        "description": "api.models",
        "isExtraImport": true,
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Profile",
        "importPath": "api.models",
        "description": "api.models",
        "isExtraImport": true,
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "api.models",
        "description": "api.models",
        "isExtraImport": true,
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "api.models",
        "description": "api.models",
        "isExtraImport": true,
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "post_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "validate_password",
        "importPath": "django.contrib.auth.password_validation",
        "description": "django.contrib.auth.password_validation",
        "isExtraImport": true,
        "detail": "django.contrib.auth.password_validation",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairSerializer",
        "importPath": "rest_framework_simplejwt.serializers",
        "description": "rest_framework_simplejwt.serializers",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.serializers",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairSerializer",
        "importPath": "rest_framework_simplejwt.serializers",
        "description": "rest_framework_simplejwt.serializers",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.serializers",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "generics",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "UniqueValidator",
        "importPath": "rest_framework.validators",
        "description": "rest_framework.validators",
        "isExtraImport": true,
        "detail": "rest_framework.validators",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "TokenRefreshView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "MyTokenObtainPairSerializer",
        "importPath": "api.serializer",
        "description": "api.serializer",
        "isExtraImport": true,
        "detail": "api.serializer",
        "documentation": {}
    },
    {
        "label": "RegisterSerializer",
        "importPath": "api.serializer",
        "description": "api.serializer",
        "isExtraImport": true,
        "detail": "api.serializer",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "permission_classes",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "AllowAny",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend_api.api.migrations.0001_initial",
        "description": "backend_api.api.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='User',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "backend_api.api.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend_api.api.migrations.0002_category_gallery_service",
        "description": "backend_api.api.migrations.0002_category_gallery_service",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Category',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('cid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklmnopqrstuvxyz123', length=5, max_length=25, prefix='')),",
        "detail": "backend_api.api.migrations.0002_category_gallery_service",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend_api.api.migrations.0003_auto_20230128_1150",
        "description": "backend_api.api.migrations.0003_auto_20230128_1150",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0002_category_gallery_service'),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name='category',\n            options={'ordering': ['-date'], 'verbose_name_plural': '2. Category'},\n        ),\n        migrations.AlterModelOptions(",
        "detail": "backend_api.api.migrations.0003_auto_20230128_1150",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend_api.api.migrations.0004_auto_20230128_1920",
        "description": "backend_api.api.migrations.0004_auto_20230128_1920",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0003_auto_20230128_1150'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='service',\n            name='country',\n        ),\n        migrations.RemoveField(",
        "detail": "backend_api.api.migrations.0004_auto_20230128_1920",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend_api.api.migrations.0005_orders",
        "description": "backend_api.api.migrations.0005_orders",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0004_auto_20230128_1920'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Orders',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('description', models.CharField(blank=True, max_length=1000, null=True)),",
        "detail": "backend_api.api.migrations.0005_orders",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend_api.api.migrations.0006_auto_20230130_0550",
        "description": "backend_api.api.migrations.0006_auto_20230130_0550",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0005_orders'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='orders',\n            name='booking_time',\n            field=models.TimeField(blank=True, null=True),\n        ),",
        "detail": "backend_api.api.migrations.0006_auto_20230130_0550",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend_api.api.migrations.0007_profile",
        "description": "backend_api.api.migrations.0007_profile",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0006_auto_20230130_0550'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Profile',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('pid', shortuuid.django_fields.ShortUUIDField(alphabet='1234567890', blank=True, length=20, max_length=25, null=True, prefix='')),",
        "detail": "backend_api.api.migrations.0007_profile",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend_api.api.migrations.0008_auto_20230301_0444",
        "description": "backend_api.api.migrations.0008_auto_20230301_0444",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0007_profile'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='gallery',\n            name='service',\n        ),\n        migrations.RemoveField(",
        "detail": "backend_api.api.migrations.0008_auto_20230301_0444",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "kind": 6,
        "importPath": "backend_api.api.admin",
        "description": "backend_api.api.admin",
        "peekOfCode": "class UserAdmin(admin.ModelAdmin):\n    list_display = ['username', 'email']\nclass ProfileAdmin(admin.ModelAdmin):\n    list_editable = ['verified']\n    list_display = ['user', 'full_name' ,'verified']\nadmin.site.register(User, UserAdmin)\nadmin.site.register( Profile,ProfileAdmin)",
        "detail": "backend_api.api.admin",
        "documentation": {}
    },
    {
        "label": "ProfileAdmin",
        "kind": 6,
        "importPath": "backend_api.api.admin",
        "description": "backend_api.api.admin",
        "peekOfCode": "class ProfileAdmin(admin.ModelAdmin):\n    list_editable = ['verified']\n    list_display = ['user', 'full_name' ,'verified']\nadmin.site.register(User, UserAdmin)\nadmin.site.register( Profile,ProfileAdmin)",
        "detail": "backend_api.api.admin",
        "documentation": {}
    },
    {
        "label": "ApiConfig",
        "kind": 6,
        "importPath": "backend_api.api.apps",
        "description": "backend_api.api.apps",
        "peekOfCode": "class ApiConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'api'",
        "detail": "backend_api.api.apps",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "backend_api.api.models",
        "description": "backend_api.api.models",
        "peekOfCode": "class User(AbstractUser):\n    username = models.CharField(max_length=100)\n    email = models.EmailField(unique=True)\n    USERNAME_FIELD = 'email'\n    REQUIRED_FIELDS = ['username']\n    def profile(self):\n        profile = Profile.objects.get(user=self)\nclass Profile(models.Model):\n    user = models.OneToOneField(User, on_delete=models.CASCADE)\n    full_name = models.CharField(max_length=1000)",
        "detail": "backend_api.api.models",
        "documentation": {}
    },
    {
        "label": "Profile",
        "kind": 6,
        "importPath": "backend_api.api.models",
        "description": "backend_api.api.models",
        "peekOfCode": "class Profile(models.Model):\n    user = models.OneToOneField(User, on_delete=models.CASCADE)\n    full_name = models.CharField(max_length=1000)\n    bio = models.CharField(max_length=100)\n    image = models.ImageField(upload_to=\"user_images\", default=\"default.jpg\")\n    verified = models.BooleanField(default=False)\ndef create_user_profile(sender, instance, created, **kwargs):\n    if created:\n        Profile.objects.create(user=instance)\ndef save_user_profile(sender, instance, **kwargs):",
        "detail": "backend_api.api.models",
        "documentation": {}
    },
    {
        "label": "create_user_profile",
        "kind": 2,
        "importPath": "backend_api.api.models",
        "description": "backend_api.api.models",
        "peekOfCode": "def create_user_profile(sender, instance, created, **kwargs):\n    if created:\n        Profile.objects.create(user=instance)\ndef save_user_profile(sender, instance, **kwargs):\n    instance.profile.save()\npost_save.connect(create_user_profile, sender=User)\npost_save.connect(save_user_profile, sender=User)",
        "detail": "backend_api.api.models",
        "documentation": {}
    },
    {
        "label": "save_user_profile",
        "kind": 2,
        "importPath": "backend_api.api.models",
        "description": "backend_api.api.models",
        "peekOfCode": "def save_user_profile(sender, instance, **kwargs):\n    instance.profile.save()\npost_save.connect(create_user_profile, sender=User)\npost_save.connect(save_user_profile, sender=User)",
        "detail": "backend_api.api.models",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "kind": 6,
        "importPath": "backend_api.api.serializer",
        "description": "backend_api.api.serializer",
        "peekOfCode": "class UserSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = User\n        fields = ('id', 'username', 'email')\nclass MyTokenObtainPairSerializer(TokenObtainPairSerializer):\n    @classmethod\n    def get_token(cls, user):\n        token = super().get_token(user)\n        # These are claims, you can add custom claims\n        token['full_name'] = user.profile.full_name",
        "detail": "backend_api.api.serializer",
        "documentation": {}
    },
    {
        "label": "MyTokenObtainPairSerializer",
        "kind": 6,
        "importPath": "backend_api.api.serializer",
        "description": "backend_api.api.serializer",
        "peekOfCode": "class MyTokenObtainPairSerializer(TokenObtainPairSerializer):\n    @classmethod\n    def get_token(cls, user):\n        token = super().get_token(user)\n        # These are claims, you can add custom claims\n        token['full_name'] = user.profile.full_name\n        token['username'] = user.username\n        token['email'] = user.email\n        token['bio'] = user.profile.bio\n        token['image'] = str(user.profile.image)",
        "detail": "backend_api.api.serializer",
        "documentation": {}
    },
    {
        "label": "RegisterSerializer",
        "kind": 6,
        "importPath": "backend_api.api.serializer",
        "description": "backend_api.api.serializer",
        "peekOfCode": "class RegisterSerializer(serializers.ModelSerializer):\n    password = serializers.CharField(\n        write_only=True, required=True, validators=[validate_password])\n    password2 = serializers.CharField(write_only=True, required=True)\n    class Meta:\n        model = User\n        fields = ('email', 'username', 'password', 'password2')\n    def validate(self, attrs):\n        if attrs['password'] != attrs['password2']:\n            raise serializers.ValidationError(",
        "detail": "backend_api.api.serializer",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend_api.api.urls",
        "description": "backend_api.api.urls",
        "peekOfCode": "urlpatterns = [\n    path('token/', views.MyTokenObtainPairView.as_view(), name='token_obtain_pair'),\n    path('token/refresh/', TokenRefreshView.as_view(), name='token_refresh'),\n    path('register/', views.RegisterView.as_view(), name='auth_register'),\n    path('test/', views.testEndPoint, name='test'),\n    path('', views.getRoutes),\n]",
        "detail": "backend_api.api.urls",
        "documentation": {}
    },
    {
        "label": "MyTokenObtainPairView",
        "kind": 6,
        "importPath": "backend_api.api.views",
        "description": "backend_api.api.views",
        "peekOfCode": "class MyTokenObtainPairView(TokenObtainPairView):\n    serializer_class = MyTokenObtainPairSerializer\nclass RegisterView(generics.CreateAPIView):\n    queryset = User.objects.all()\n    permission_classes = (AllowAny,)\n    serializer_class = RegisterSerializer\n# Get All Routes\n@api_view(['GET'])\ndef getRoutes(request):\n    routes = [",
        "detail": "backend_api.api.views",
        "documentation": {}
    },
    {
        "label": "RegisterView",
        "kind": 6,
        "importPath": "backend_api.api.views",
        "description": "backend_api.api.views",
        "peekOfCode": "class RegisterView(generics.CreateAPIView):\n    queryset = User.objects.all()\n    permission_classes = (AllowAny,)\n    serializer_class = RegisterSerializer\n# Get All Routes\n@api_view(['GET'])\ndef getRoutes(request):\n    routes = [\n        '/api/token/',\n        '/api/register/',",
        "detail": "backend_api.api.views",
        "documentation": {}
    },
    {
        "label": "getRoutes",
        "kind": 2,
        "importPath": "backend_api.api.views",
        "description": "backend_api.api.views",
        "peekOfCode": "def getRoutes(request):\n    routes = [\n        '/api/token/',\n        '/api/register/',\n        '/api/token/refresh/'\n    ]\n    return Response(routes)\n@api_view(['GET', 'POST'])\n@permission_classes([IsAuthenticated])\ndef testEndPoint(request):",
        "detail": "backend_api.api.views",
        "documentation": {}
    },
    {
        "label": "testEndPoint",
        "kind": 2,
        "importPath": "backend_api.api.views",
        "description": "backend_api.api.views",
        "peekOfCode": "def testEndPoint(request):\n    if request.method == 'GET':\n        data = f\"Congratulation {request.user}, your API just responded to GET request\"\n        return Response({'response': data}, status=status.HTTP_200_OK)\n    elif request.method == 'POST':\n        text = \"Hello buddy\"\n        data = f'Congratulation your API just responded to POST request with text: {text}'\n        return Response({'response': data}, status=status.HTTP_200_OK)\n    return Response({}, status.HTTP_400_BAD_REQUEST)",
        "detail": "backend_api.api.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "backend_api.backend.asgi",
        "description": "backend_api.backend.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "backend_api.backend.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "backend_api.backend.settings",
        "description": "backend_api.backend.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-xmyy56c+#c$!7u^#8#&(egh&2_+or##y4+t)xps)i#zbhlw(5o'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "backend_api.backend.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "backend_api.backend.settings",
        "description": "backend_api.backend.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-xmyy56c+#c$!7u^#8#&(egh&2_+or##y4+t)xps)i#zbhlw(5o'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'jazzmin',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',",
        "detail": "backend_api.backend.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "backend_api.backend.settings",
        "description": "backend_api.backend.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'jazzmin',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',",
        "detail": "backend_api.backend.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "backend_api.backend.settings",
        "description": "backend_api.backend.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'jazzmin',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "backend_api.backend.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "backend_api.backend.settings",
        "description": "backend_api.backend.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'jazzmin',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    # Custom\n    'api',",
        "detail": "backend_api.backend.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "backend_api.backend.settings",
        "description": "backend_api.backend.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'corsheaders.middleware.CorsMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]",
        "detail": "backend_api.backend.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "backend_api.backend.settings",
        "description": "backend_api.backend.settings",
        "peekOfCode": "ROOT_URLCONF = 'backend.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / 'templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "backend_api.backend.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "backend_api.backend.settings",
        "description": "backend_api.backend.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / 'templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "backend_api.backend.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "backend_api.backend.settings",
        "description": "backend_api.backend.settings",
        "peekOfCode": "WSGI_APPLICATION = 'backend.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.0/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "backend_api.backend.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "backend_api.backend.settings",
        "description": "backend_api.backend.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "backend_api.backend.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "backend_api.backend.settings",
        "description": "backend_api.backend.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "backend_api.backend.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "backend_api.backend.settings",
        "description": "backend_api.backend.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'api.User'\nREST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework_simplejwt.authentication.JWTAuthentication',\n    )\n}\nSIMPLE_JWT = {\n    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=5),\n    'REFRESH_TOKEN_LIFETIME': timedelta(days=50),\n    'ROTATE_REFRESH_TOKENS': True,",
        "detail": "backend_api.backend.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "backend_api.backend.settings",
        "description": "backend_api.backend.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework_simplejwt.authentication.JWTAuthentication',\n    )\n}\nSIMPLE_JWT = {\n    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=5),\n    'REFRESH_TOKEN_LIFETIME': timedelta(days=50),\n    'ROTATE_REFRESH_TOKENS': True,\n    'BLACKLIST_AFTER_ROTATION': True,",
        "detail": "backend_api.backend.settings",
        "documentation": {}
    },
    {
        "label": "SIMPLE_JWT",
        "kind": 5,
        "importPath": "backend_api.backend.settings",
        "description": "backend_api.backend.settings",
        "peekOfCode": "SIMPLE_JWT = {\n    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=5),\n    'REFRESH_TOKEN_LIFETIME': timedelta(days=50),\n    'ROTATE_REFRESH_TOKENS': True,\n    'BLACKLIST_AFTER_ROTATION': True,\n    'UPDATE_LAST_LOGIN': False,\n    'ALGORITHM': 'HS256',\n    'VERIFYING_KEY': None,\n    'AUDIENCE': None,\n    'ISSUER': None,",
        "detail": "backend_api.backend.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOW_ALL_ORIGINS",
        "kind": 5,
        "importPath": "backend_api.backend.settings",
        "description": "backend_api.backend.settings",
        "peekOfCode": "CORS_ALLOW_ALL_ORIGINS = True\n# Internationalization\n# https://docs.djangoproject.com/en/4.0/topics/i18n/\nLANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\nSTATIC_URL = 'static/'",
        "detail": "backend_api.backend.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "backend_api.backend.settings",
        "description": "backend_api.backend.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "backend_api.backend.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "backend_api.backend.settings",
        "description": "backend_api.backend.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\ncustomColorPalette = [",
        "detail": "backend_api.backend.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "backend_api.backend.settings",
        "description": "backend_api.backend.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\ncustomColorPalette = [\n    {\"color\": \"hsl(4, 90%, 58%)\", \"label\": \"Red\"},",
        "detail": "backend_api.backend.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "backend_api.backend.settings",
        "description": "backend_api.backend.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\ncustomColorPalette = [\n    {\"color\": \"hsl(4, 90%, 58%)\", \"label\": \"Red\"},\n    {\"color\": \"hsl(340, 82%, 52%)\", \"label\": \"Pink\"},",
        "detail": "backend_api.backend.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "backend_api.backend.settings",
        "description": "backend_api.backend.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\ncustomColorPalette = [\n    {\"color\": \"hsl(4, 90%, 58%)\", \"label\": \"Red\"},\n    {\"color\": \"hsl(340, 82%, 52%)\", \"label\": \"Pink\"},\n    {\"color\": \"hsl(291, 64%, 42%)\", \"label\": \"Purple\"},\n    {\"color\": \"hsl(262, 52%, 47%)\", \"label\": \"Deep Purple\"},\n    {\"color\": \"hsl(231, 48%, 48%)\", \"label\": \"Indigo\"},",
        "detail": "backend_api.backend.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "backend_api.backend.settings",
        "description": "backend_api.backend.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\ncustomColorPalette = [\n    {\"color\": \"hsl(4, 90%, 58%)\", \"label\": \"Red\"},\n    {\"color\": \"hsl(340, 82%, 52%)\", \"label\": \"Pink\"},\n    {\"color\": \"hsl(291, 64%, 42%)\", \"label\": \"Purple\"},\n    {\"color\": \"hsl(262, 52%, 47%)\", \"label\": \"Deep Purple\"},\n    {\"color\": \"hsl(231, 48%, 48%)\", \"label\": \"Indigo\"},\n    {\"color\": \"hsl(207, 90%, 54%)\", \"label\": \"Blue\"},\n]\nCKEDITOR_5_CONFIGS = {",
        "detail": "backend_api.backend.settings",
        "documentation": {}
    },
    {
        "label": "customColorPalette",
        "kind": 5,
        "importPath": "backend_api.backend.settings",
        "description": "backend_api.backend.settings",
        "peekOfCode": "customColorPalette = [\n    {\"color\": \"hsl(4, 90%, 58%)\", \"label\": \"Red\"},\n    {\"color\": \"hsl(340, 82%, 52%)\", \"label\": \"Pink\"},\n    {\"color\": \"hsl(291, 64%, 42%)\", \"label\": \"Purple\"},\n    {\"color\": \"hsl(262, 52%, 47%)\", \"label\": \"Deep Purple\"},\n    {\"color\": \"hsl(231, 48%, 48%)\", \"label\": \"Indigo\"},\n    {\"color\": \"hsl(207, 90%, 54%)\", \"label\": \"Blue\"},\n]\nCKEDITOR_5_CONFIGS = {\n    \"default\": {",
        "detail": "backend_api.backend.settings",
        "documentation": {}
    },
    {
        "label": "CKEDITOR_5_CONFIGS",
        "kind": 5,
        "importPath": "backend_api.backend.settings",
        "description": "backend_api.backend.settings",
        "peekOfCode": "CKEDITOR_5_CONFIGS = {\n    \"default\": {\n        \"toolbar\": [\n            \"heading\",\n            \"|\",\n            \"bold\",\n            \"italic\",\n            \"link\",\n            \"bulletedList\",\n            \"numberedList\",",
        "detail": "backend_api.backend.settings",
        "documentation": {}
    },
    {
        "label": "CKEDITOR_UPLOAD_PATH",
        "kind": 5,
        "importPath": "backend_api.backend.settings",
        "description": "backend_api.backend.settings",
        "peekOfCode": "CKEDITOR_UPLOAD_PATH = 'uploads/'\nJAZZMIN_SETTINGS = {\n    \"site_title\": \"Django & React JWT Authentication \",\n    \"welcome_sign\": \"Hey there...welcome back\",\n    \"site_header\": \"Django & React JWT Authentication \",\n    \"site_brand\": \"Think | Create | Inspire\",\n    \"copyright\": \"www.desphixs.com\",\n}\nJAZZMIN_UI_TWEAKS = {\n    \"navbar_small_text\": False,",
        "detail": "backend_api.backend.settings",
        "documentation": {}
    },
    {
        "label": "JAZZMIN_SETTINGS",
        "kind": 5,
        "importPath": "backend_api.backend.settings",
        "description": "backend_api.backend.settings",
        "peekOfCode": "JAZZMIN_SETTINGS = {\n    \"site_title\": \"Django & React JWT Authentication \",\n    \"welcome_sign\": \"Hey there...welcome back\",\n    \"site_header\": \"Django & React JWT Authentication \",\n    \"site_brand\": \"Think | Create | Inspire\",\n    \"copyright\": \"www.desphixs.com\",\n}\nJAZZMIN_UI_TWEAKS = {\n    \"navbar_small_text\": False,\n    \"footer_small_text\": False,",
        "detail": "backend_api.backend.settings",
        "documentation": {}
    },
    {
        "label": "JAZZMIN_UI_TWEAKS",
        "kind": 5,
        "importPath": "backend_api.backend.settings",
        "description": "backend_api.backend.settings",
        "peekOfCode": "JAZZMIN_UI_TWEAKS = {\n    \"navbar_small_text\": False,\n    \"footer_small_text\": False,\n    \"body_small_text\": False,\n    \"brand_small_text\": False,\n    \"brand_colour\": \"navbar-success\",\n    \"accent\": \"accent-teal\",\n    \"navbar\": \"navbar-dark\",\n    \"no_navbar_border\": False,\n    \"navbar_fixed\": False,",
        "detail": "backend_api.backend.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend_api.backend.urls",
        "description": "backend_api.backend.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('api/', include(\"api.urls\")),\n    path('ckeditor/', include('ckeditor_uploader.urls')),\n    path(\"ckeditor5/\", include('django_ckeditor_5.urls')),\n]\nurlpatterns +=static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)\nurlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)",
        "detail": "backend_api.backend.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "backend_api.backend.wsgi",
        "description": "backend_api.backend.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "backend_api.backend.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "backend_api.manage",
        "description": "backend_api.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'backend.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "backend_api.manage",
        "documentation": {}
    }
]